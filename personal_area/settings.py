"""
Django settings for personal_area project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
import json

from email.utils import parseaddr
from pathlib import Path
from typing import NamedTuple


def options_parse(options: str) -> dict:
    options_dict = dict()
    for parameter in options.split(','):
        attr, value = parameter.split('=')
        options_dict.update({attr: value})

    return options_dict


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG=int(os.environ.get('DEBUG', default=0))
DEBUG_TOOLBAR=int(os.environ.get('DEBUG_TOOLBAR', default=0))
FILE_LOGGING_MODE = int(os.environ.get('FILE_LOGGING_MODE', default=0))

ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', default='').split()
LOGLEVEL=os.environ.get('LOGLEVEL', default='WARNING')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'salary.apps.SalaryConfig',
    'crispy_forms',
    'crispy_bootstrap5',
    'django.contrib.humanize',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'personal_area.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'personal_area.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DB_OPTIONS = os.environ.get('DB_OPTIONS', default='')

DATABASES = {
    'default': {
        'ENGINE': os.environ.get('DB_ENGINE',
                                 default='django.db.backends.sqlite3'),
        'NAME': os.environ.get('DB_NAME',
                               default=os.path.join(BASE_DIR, 'db.sqlite3')),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': os.environ.get('DB_HOST'),
        'PORT': os.environ.get('DB_PORT'),
        'OPTIONS': options_parse(DB_OPTIONS),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators
AUTH_VALIDAROR_PATH = 'django.contrib.auth.password_validation.'
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': AUTH_VALIDAROR_PATH + 'UserAttributeSimilarityValidator',
    },
    {
        'NAME': AUTH_VALIDAROR_PATH + 'MinimumLengthValidator',
    },
    {
        'NAME': AUTH_VALIDAROR_PATH + 'CommonPasswordValidator',
    },
    {
        'NAME': AUTH_VALIDAROR_PATH + 'NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = os.environ.get('TZ')

USE_I18N = True
USE_L10N = True
USE_TZ = True if TIME_ZONE else False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

if DEBUG_TOOLBAR:
    INSTALLED_APPS.append("debug_toolbar")
    MIDDLEWARE.insert(0, "debug_toolbar.middleware.DebugToolbarMiddleware")
    INTERNAL_IPS = ["127.0.0.1"]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} : {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': LOGLEVEL,
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'level': LOGLEVEL,
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'django_debug.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'root': {
            'handlers': ['console'],
            'level': LOGLEVEL,
            'propagate': True,
        },
    },
}

if FILE_LOGGING_MODE:
    LOGGING.update({
        'loggers': {
            'root': {
                'handlers': ['file'],
                'level': LOGLEVEL,
                'propagate': True,
            },
        },
    })

CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'
CRISPY_TEMPLATE_PACK = 'bootstrap5'

LOGIN_URL = '/login/'

EMAIL_BACKEND = os.environ.get(
    'EMAIL_BACKEND',
    default='django.core.mail.backends.smtp.EmailBackend'
)
EMAIL_HOST = os.environ.get('EMAIL_HOST', 'localhost')
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'user')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', 'password')
EMAIL_PORT = int(os.environ.get('EMAIL_PORT', 25))
EMAIL_USE_SSL = int(os.environ.get('EMAIL_USE_SSL', default=0))

SERVER_EMAIL = DEFAULT_FROM_EMAIL = os.environ.get('SERVER_EMAIL')
ADMINS = [
    parseaddr(addr)
    for addr in os.environ.get('DJANGO_ADMINS', '').split(',')
]

GSHEETS_API_KEY_FILE = os.environ.get('GSHEETS_API_KEY_FILE')
if GSHEETS_API_KEY_FILE:
    api_key_full_path = os.path.join(
        BASE_DIR,
        '.secrets',
        GSHEETS_API_KEY_FILE
    )
    if os.path.exists(api_key_full_path):
        with open(api_key_full_path) as json_file:
            GSHEETS_API_KEY = json.load(json_file)

SPREADSHEET = os.environ.get('SPREADSHEET', '')
if os.environ.get('CSRF_TRUSTED_ORIGINS'):
    CSRF_TRUSTED_ORIGINS = [
        'https://' + addr 
        for addr in os.environ['CSRF_TRUSTED_ORIGINS'].split(',')
    ]
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True

DOCUMENTS_DIR_NAME = 'documents'

REQUIRED_EXPERIENCE = 90
EXPERIENCE_BONUS = 200.0
PUBLICATION_BONUS = 100.0

ATTESTATION_BONUS = 200.0
DISCIPLINE_AWARD = 1000.0
HALL_CLEANING_BONUS = 400.0
HOOKAH_BONUS_RATIO = 0.2
SPECIAL_CATEGORY_BONUS = 3000.0
COMMON_CATEGORY_BONUS = 2000.0

class Criteria(NamedTuple):
    bar: tuple[tuple[int, float], ...]
    game_zone: tuple[tuple[int, float], ...]
    vr: tuple[tuple[int, float], ...]


ADMIN_BONUS_CRITERIA = Criteria(
    bar=(
        (0, 0.005),
        (3000, 0.01),
        (4000, 0.02),
        (6000, 0.025),
        (8000, 0.03)
    ),
    game_zone=(
        (0, 0.005),
        (20000, 0.01),
        (25000, 0.0125),
        (27500, 0.015), 
        (30000, 0.0175)
    ),
    vr=(
        (0, 0.1),
        (1000, 0.12),
        (2000, 0.13),
        (3000, 0.14),
        (5000, 0.15)
    )
)

CASHIER_BONUS_CRITERIA = Criteria(
    bar=(
        (0, 0.03),
        (3000, 0.04),
        (4000, 0.05),
        (6000, 0.06),
        (8000, 0.07)
    ),
    game_zone=(
        (0, 0.005),
        (20000, 0.01),
        (25000, 0.0125),
        (27500, 0.015),
        (30000, 0.0175)
    ),
    vr=(
        (0, 0.05),
        (1000, 0.06),
        (2000, 0.065),
        (3000, 0.07),
        (5000, 0.075)
    )
)

DEFAULT_MISCONDUCT_ARTICLE_NUMBER = 1
DEFAULT_CACHE_LIFETIME=3600
